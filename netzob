#!/usr/bin/env python
# -*- coding: utf-8 -*-

#+---------------------------------------------------------------------------+
#|          01001110 01100101 01110100 01111010 01101111 01100010            |
#|                                                                           |
#|               Netzob : Inferring communication protocols                  |
#+---------------------------------------------------------------------------+
#| Copyright (C) 2011 Georges Bossert and Frédéric Guihéry                   |
#| This program is free software: you can redistribute it and/or modify      |
#| it under the terms of the GNU General Public License as published by      |
#| the Free Software Foundation, either version 3 of the License, or         |
#| (at your option) any later version.                                       |
#|                                                                           |
#| This program is distributed in the hope that it will be useful,           |
#| but WITHOUT ANY WARRANTY; without even the implied warranty of            |
#| MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the              |
#| GNU General Public License for more details.                              |
#|                                                                           |
#| You should have received a copy of the GNU General Public License         |
#| along with this program. If not, see <http://www.gnu.org/licenses/>.      |
#+---------------------------------------------------------------------------+
#| @url      : http://www.netzob.org                                         |
#| @contact  : contact@netzob.org                                            |
#| @sponsors : Amossys, http://www.amossys.fr                                |
#|             Supélec, http://www.rennes.supelec.fr/ren/rd/cidre/           |
#+---------------------------------------------------------------------------+ 

#+---------------------------------------------------------------------------+
#| Standard library imports
#+---------------------------------------------------------------------------+
import sys
import logging.config
import gobject
import os

#+---------------------------------------------------------------------------+
#| Prepare, load and import the required modules
#+---------------------------------------------------------------------------+
sys.path.insert(0, 'src/')

try:
    # Verify that libNeedleman is in the path
    import libNeedleman
except:
    # Else, assume the path is gotten from the 'python setup.py build' command
    arch = os.uname()[-1]
    python_version = sys.version[:3]
    build_lib_path = "build/lib.linux-" + arch + "-" + python_version
    sys.path.append(build_lib_path)

import netzob.NetzobGui as NetzobGui


#+---------------------------------------------------------------------------+
#| get_parser
#|  Creates and returns the command line parser.
#+---------------------------------------------------------------------------+
def get_parser():
    usage = "usage: %prog [options]"
    parser = optparse.OptionParser(usage, prog=release.appname,
                                   version=release.version)
    parser.add_option("-c", "--config",
                      dest="config", default=cf.USER_CONF,
                      help="configuration file")
    group = parser.add_option_group('Logging options')
    group.add_option('-q', '--quiet', action='store_const', const=0,
                     dest='verbose', help='Print errors only.')
    group.add_option('-v', '--verbose', action='store_const', const=2,
                     dest='verbose', default=1,
                     help='Print info level logs (default).')
    group.add_option('--noisy', action='store_const', const=3,
                     dest='verbose', help='Print all logs.')
    return parser




if __name__ == "__main__":
    gobject.threads_init() # for handling concurrent GUI access from threads





    netzob = NetzobGui.NetzobGui()
    netzob.startGui()
